"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
#import environ

QT_MULTI = False

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
#DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'

# セッションは更新されてから10分でタイムアウトする。
# SESSION_SAVE_EVERY_REQUEST = True でリクエストがあるごとにセッションは更新される

#SESSION_COOKIE_AGE = 600
#SESSION_SAVE_EVERY_REQUEST = True

# .envファイルを読み込む
#env = environ.Env()
#env.read_env(os.path.join(BASE_DIR, '.env'))

# .envファイルから各環境変数を読み込む
#QT_DB_NAME= env('QT_DB_NAME')
#QT_DB_USER=env('QT_DB_USER')
#QT_DB_PASSWORD=env('QT_DB_PASSWORD')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v6sgsip42w7-7fci68grkxaq+v0&ut)z)9zizaa443j!)y0p9t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

#マルチテナント関連設定
#TENANT_MODEL = "account.QtTenant" 
'''
SHARED_APPS = (
    'tenant_schemas',  # mandatory, should always be before any django app
    #'account', # you must list the app where your tenant model resides in
    'django.contrib.contenttypes',
    # everything below here is optional
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

TENANT_APPS = (
    'django.contrib.contenttypes',
    'activities',
)
'''

# Application definition

INSTALLED_APPS = [
    #'tenant_schemas',
    #'account',
    'system',
    'activities.apps.ActivitiesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    #'tenant_schemas.middleware.TenantMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #SessionUserTenantMiddlewareによるテナント名称の取得には、認証されたユーザIDが必要なので、
    #AuthenticationMiddlewareの後に呼ばれるようにする
    #'account.middleware.SessionUserTenantMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'
#PUBLIC_SCHEMA_URLCONF = 'backend.account.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR.joinpath('templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
#    'default': {
#         'ENGINE': 'tenant_schemas.postgresql_backend',
#         'NAME': QT_DB_NAME,
#         'USER': QT_DB_USER,
#         'PASSWORD': QT_DB_PASSWORD,
#         'HOST': "",
#         'PORT': "",
#    }
}


#DATABASE_ROUTERS = (
#    'tenant_schemas.routers.TenantSyncRouter',
#)

USE_POSTGRESQL = False

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = (
    BASE_DIR.joinpath('frontend'),  # new
    #BASE_DIR.joinpath('frontend','static'),  # new
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ログインと、セッション認証のための設定

#AUTH_USER_MODEL = "account.QtUser"

#CSRF_COOKIE_SAMESITE = 'Strict'
#SESSION_COOKIE_SAMESITE = 'Strict'
#CSRF_COOKIE_HTTPONLY = False
#SESSION_COOKIE_HTTPONLY = True
#CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']

#ログイン後、リダイレクトするURL
LOGIN_REDIRECT_URL = ''    # 追加
#LOGOUT_REDIRECT_URL ='/qt/account/loginHome'
#DEBUG = True

